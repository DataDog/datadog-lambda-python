# IAM permissions require service name to begin with 'integration-tests'
service: integration-tests-python

provider:
  name: aws
  region: sa-east-1
  tracing:
    lambda: "PassThrough"
  environment:
    DD_INTEGRATION_TEST: true
    DD_TRACE_ENABLED: true
    DD_API_KEY: ${env:DD_API_KEY}
  lambdaHashingVersion: 20201221
  timeout: 15
  iam:
    # IAM permissions require that all functions are deployed with this role
    role: "arn:aws:iam::601427279990:role/serverless-integration-test-lambda-role"

layers:
  python27:
    package:
      artifact: ../../.layers/datadog_lambda_py2.7.zip
  python36:
    package:
      artifact: ../../.layers/datadog_lambda_py3.6.zip
  python37:
    package:
      artifact: ../../.layers/datadog_lambda_py3.7.zip
  python38:
    package:
      artifact: ../../.layers/datadog_lambda_py3.8.zip

functions:
  # async-metrics (flushed to logs)
  async-metrics_python27:
    handler: handle.handle
    runtime: python2.7
    layers:
      - { Ref: Python27LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  async-metrics_python36:
    handler: handle.handle
    runtime: python3.6
    layers:
      - { Ref: Python36LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  async-metrics_python37:
    handler: handle.handle
    runtime: python3.7
    layers:
      - { Ref: Python37LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  async-metrics_python38:
    handler: handle.handle
    runtime: python3.8
    layers:
      - { Ref: Python38LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  # sync-metrics (sent via API)
  sync-metrics_python27:
    handler: handle.handle
    runtime: python2.7
    layers:
      - { Ref: Python27LambdaLayer }

  sync-metrics_python36:
    handler: handle.handle
    runtime: python3.6
    layers:
      - { Ref: Python36LambdaLayer }

  sync-metrics_python37:
    handler: handle.handle
    runtime: python3.7
    layers:
      - { Ref: Python37LambdaLayer }

  sync-metrics_python38:
    handler: handle.handle
    runtime: python3.8
    layers:
      - { Ref: Python38LambdaLayer }
