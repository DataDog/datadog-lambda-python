name: build

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install .[dev]

      - name: Check formatting
        run: |
          source venv/bin/activate
          ./scripts/check_format.sh

      - name: Lint
        run: |
          source venv/bin/activate
          flake8 datadog_lambda/

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [2.7, 3.6, 3.7, 3.8]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install .[dev]

      - name: Run tests
        run: |
          source venv/bin/activate
          nose2 -v

  integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime-param: [2.7, 3.6, 3.7, 3.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node 14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Serverless Framework
        run: sudo yarn global add serverless --prefix /usr/local

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        working-directory: tests/integration
        run: yarn install

      - name: Run tests
        env:
          BUILD_LAYERS: true
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          RUNTIME_PARAM: ${{ matrix.runtime-param }}
        run: ./scripts/run_integration_tests.sh
